import pandas as pd

# Функция для ввода количества студентов в каждой группе
def input_students():
    courses = {}
    for i in range(1, 7):
        groups = {}
        for j in range(1, 7):
            num_students = int(input(f"Введите количество студентов в {j} группе {i} курса: "))
            groups[f"Группа {j}"] = num_students
        courses[f"Курс {i}"] = groups
    return pd.DataFrame(courses)

# Функция для определения курса с минимальным количеством студентов
def find_min_course(courses):
    num_students = courses.sum(axis=1)
    min_course = num_students.idxmin()
    return min_course

# Функция для определения самой малочисленной группы
def find_min_group(courses):
    min_group = courses.min().min()
    min_group_idx = courses.unstack().idxmin()
    min_group_num = (int(min_group_idx[1][5]), int(min_group_idx[0][-1]))
    return min_group_num

# Функция для определения номеров самых малочисленных групп по каждому курсу
def find_min_groups_by_course(courses):
    min_groups = []
    for i in range(1, 7):
        min_group = courses[f"Курс {i}"].min()
        min_group_num = courses[f"Курс {i}"].idxmin()[1]
        min_groups.append(int(min_group_num.split()[1]))
    return min_groups

# Ввод количества студентов в каждой группе
courses = input_students()

# Определение курса с минимальным количеством студентов
min_course = find_min_course(courses)
print(f"На {min_course} обучается меньше всего студентов")

# Определение самой малочисленной группы
min_group_num = find_min_group(courses)
print(f"Самая малочисленная группа находится на {min_group_num[0]} курсе, в {min_group_num[1]} группе")

# Определение номеров самых малочисленных групп по каждому курсу
min_groups = find_min_groups_by_course(courses)
for i in range(1, 7):
    print(f"Самая малочисленная группа на {i} курсе имеет номер {min_groups[i-1]}")

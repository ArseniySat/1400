x1, y1 = 0, 0
x2, y2 = 2, 0
x3, y3 = 3, 2
x4, y4 = 1, 2

# Создаем список из координат вершин
points = [(x1, y1), (x2, y2), (x3, y3), (x4, y4)]

# Создаем список из кортежей, которые состоят из координат двух вершин и точки пересечения диагоналей
triangles = [(points[i], points[(i+1)%4], (points[i-1][0]+points[(i+1)%4][0]-points[i][0], points[i-1][1]+points[(i+1)%4][1]-points[i][1])) for i in range(4)]

# Вычисляем площадь каждого из четырех треугольников
S1 = 0.5 * abs((triangles[0][0][0] - triangles[0][2][0]) * (triangles[0][1][1] - triangles[0][2][1]) 
                - (triangles[0][1][0] - triangles[0][2][0]) * (triangles[0][0][1] - triangles[0][2][1]))
S2 = 0.5 * abs((triangles[1][0][0] - triangles[1][2][0]) * (triangles[1][1][1] - triangles[1][2][1]) 
                - (triangles[1][1][0] - triangles[1][2][0]) * (triangles[1][0][1] - triangles[1][2][1]))
S3 = 0.5 * abs((triangles[2][0][0] - triangles[2][2][0]) * (triangles[2][1][1] - triangles[2][2][1]) 
                - (triangles[2][1][0] - triangles[2][2][0]) * (triangles[2][0][1] - triangles[2][2][1]))
S4 = 0.5 * abs((triangles[3][0][0] - triangles[3][2][0]) * (triangles[3][1][1] - triangles[3][2][1]) 
                - (triangles[3][1][0] - triangles[3][2][0]) * (triangles[3][0][1] - triangles[3][2][1]))

# Суммируем площади треугольников для определения площади четырехугольника
S_chet = S1 + S2 + S3 + S4

print('Площадь четырехугольника:', S_chet)
